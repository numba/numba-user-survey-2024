How do you interact with the Numba project? (check all that apply),Unnamed: 10,Unnamed: 11,Unnamed: 12,Unnamed: 13,Unnamed: 14,Unnamed: 15,What kinds of applications do you use Numba for? (check all that apply),Unnamed: 18,Unnamed: 19,Unnamed: 20,Unnamed: 21,Unnamed: 22,Unnamed: 23,Unnamed: 24,Unnamed: 25,Unnamed: 26,Unnamed: 27,Unnamed: 28,Which of the following Numba features have you found useful? (check all that apply),Unnamed: 31,Unnamed: 32,Unnamed: 33,Unnamed: 34,Unnamed: 35,Unnamed: 36,Unnamed: 37,Unnamed: 38,Unnamed: 39,Unnamed: 40,Unnamed: 41,Unnamed: 42,Unnamed: 43,Unnamed: 44,Unnamed: 45,Unnamed: 46,Unnamed: 47,Which of the following Numba features did not work for you or were too limited for your use case? (check all that apply),Unnamed: 50,Unnamed: 51,Unnamed: 52,Unnamed: 53,Unnamed: 54,Unnamed: 55,Unnamed: 56,Unnamed: 57,Unnamed: 58,Unnamed: 59,Unnamed: 60,Unnamed: 61,Unnamed: 62,Unnamed: 63,Unnamed: 64,Unnamed: 65,Unnamed: 66,"Which of the following Numba features were usable for you, but you wish could be improved? (check all that apply)",Unnamed: 69,Unnamed: 70,Unnamed: 71,Unnamed: 72,Unnamed: 73,Unnamed: 74,Unnamed: 75,Unnamed: 76,Unnamed: 77,Unnamed: 78,Unnamed: 79,Unnamed: 80,Unnamed: 81,Unnamed: 82,Unnamed: 83,Unnamed: 84,Unnamed: 85,Please rank these Numba development activities in order of how important they are to you. (From highest priority to lowest priority),Unnamed: 88,Unnamed: 89,Unnamed: 90,Unnamed: 91,Unnamed: 92,Unnamed: 93,Unnamed: 94,Unnamed: 95,Unnamed: 96,Please rank these potential new Numba features in order of how important they are to you. (From highest priority to lowest priority),Unnamed: 98,Unnamed: 99,Unnamed: 100,Unnamed: 101,Unnamed: 102,Unnamed: 103,Unnamed: 104,Unnamed: 105,Unnamed: 106,Unnamed: 107,Do you use llvmlite separately from Numba? (Yes/No),"If you answered yes in Q8, why do you use llvmlite? (check all that apply)",Unnamed: 110,Unnamed: 111,Unnamed: 112,Unnamed: 113,How would you prefer to get Numba project-related announcements and updates? (check all that apply),Unnamed: 116,Unnamed: 117,Unnamed: 118,Unnamed: 119,Unnamed: 120,Unnamed: 121
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,I have contributed a pull request to Numba.,I am a regular reader of the Numba discussion forums.,"I answer other people's questions about Numba on forums, StackOverflow, etc.","I package Numba for distribution (conda, Linux distributions, homebrew, etc)",Hobby,Educational projects,Visualization,Financial analytics,Scientific research,Compiler development,Web-based microservices,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",Machine learning / AI,Time series analysis,Spatial / GIS data set processing,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,"The extension API (@overload, etc)",First class function types (types.FunctionType),Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,"The extension API (@overload, etc)",First class function types (types.FunctionType),Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,"Extension API (@overload, etc)",First class function types (types.FunctionType),Response to bug reports,Review of pull requests,"Support for new Python minor releases (3.11, 3.12, etc)",Support for new NumPy releases,Support for new LLVM releases,Improved reference documentation,Creating examples of Numba usage and performance best practices,Feature development,Answering user questions in the forums,Continued support for Python releases more than 4 years old (example: Python 3.8),Ahead-of-time compilation with support for type-based dispatching and multiple CPU target specialization,Calling C++ (not C) code directly from nopython functions,Support for non-NVIDIA GPUs,Better support for struct-like data types and arrays of struct data on CPU and GPU,Context managers/with statement,async features,typed.Set,yield from,Python typing <-> Numba type integration (i.e. get a Numba signature from Python type annotations),More NumPy functions,Performance profiling,Response,,Learning about compilers,Compiler research,Building Python compilers (other than Numba),Building non-Python or domain specific compilers,Mastodon,X (formerly Twitter),YouTube,Discourse forums,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,,,,Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,Autovectorization,,,,,Support for generators,,,,,CUDA kernel compilation (@cuda.jit),,,Creating stencil functions with @stencil,,,Ahead of time compilation (with numba.pycc),,,,First class function types (types.FunctionType),4,3,10,5,9,8,6,2,1,7,1,3,8,6,5,9,10,11,7,2,4,No,,,,,,,,,Discourse forums,,,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,"I answer other people's questions about Numba on forums, StackOverflow, etc.","I package Numba for distribution (conda, Linux distributions, homebrew, etc)",,,,,,,,,,Machine learning / AI,,Spatial / GIS data set processing,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,6,7,9,4,5,2,1,3,8,10,1,10,11,3,7,9,4,5,6,2,8,No,,,,,,Mastodon,,,,,,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,"I package Numba for distribution (conda, Linux distributions, homebrew, etc)",,,,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",Machine learning / AI,Time series analysis,,,,Support for generators,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,4,7,10,9,8,6,5,1,3,2,2,3,9,1,6,5,10,11,8,4,7,No,,,,,,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,Scientific research,,,,,,Time series analysis,,,,,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,6,2,1,3,5,7,8,9,10,5,4,10,7,8,6,11,9,2,1,3,No,,,,,,Mastodon,,,,Changelog (in docs),,Blog
,,,,,,,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",Machine learning / AI,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,,,Autovectorization,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,Autovectorization,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,Autovectorization,,,6,7,9,1,8,3,2,5,4,10,5,6,9,4,7,1,10,11,8,2,3,No,,,,,,,,,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,Scientific research,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,,,,,First class function types (types.FunctionType),,,,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,First class function types (types.FunctionType),,,,"Typed containers (typed.List, typed.Dict)",,,,,,,,,,,,,,First class function types (types.FunctionType),5,7,10,9,8,3,2,1,4,6,4,5,10,1,8,7,2,11,3,6,9,No,,,,,,,,,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,Educational projects,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,8,10,3,9,4,1,2,6,7,4,1,9,6,7,5,10,11,8,2,3,No,,,,,,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,Hobby,,,Financial analytics,Scientific research,,,,"Numerical simulations / ""Digital Twins""",Machine learning / AI,Time series analysis,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,,,Autovectorization,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,,,Caching of compiled functions to disk,,,,,,9,8,4,1,2,7,5,3,6,10,11,8,10,5,4,9,6,7,3,2,1,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,,,I am a regular reader of the Numba discussion forums.,,,,Educational projects,,,Scientific research,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,,,,,,Caching of compiled functions to disk,,,Autovectorization,,,,,Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,6,8,9,4,5,7,2,3,1,10,9,6,10,8,7,11,4,5,3,1,2,No,,,,,,,,,,,Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,Financial analytics,,,,,"Numerical simulations / ""Digital Twins""",,,,Support for raising exceptions (raise statement),,,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,,,Autovectorization,"The extension API (@overload, etc)",First class function types (types.FunctionType),,,,"Typed containers (typed.List, typed.Dict)",,,,,,,,"Calling back into the Python interpreter using ""with objmode""",,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),,,,,7,8,1,2,9,4,3,6,5,10,6,3,1,7,8,2,10,11,9,5,4,No,,,,,,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,High performance computing on clusters,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,,,,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,,,,,,,,,,,,2,6,9,8,7,4,5,1,3,10,8,5,10,3,9,6,4,11,2,1,7,No,,,,,,,X (formerly Twitter),,Discourse forums,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,Financial analytics,,,,,,Machine learning / AI,Time series analysis,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,8,9,4,3,10,1,7,5,2,6,2,1,9,6,7,5,10,11,4,3,8,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,Hobby,,,Financial analytics,,,,,"Numerical simulations / ""Digital Twins""",,Time series analysis,,,,Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,,First class function types (types.FunctionType),,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,,"Extension API (@overload, etc)",,1,5,9,2,4,3,7,6,8,10,1,6,5,3,9,2,10,11,8,4,7,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,,,,,"Numerical simulations / ""Digital Twins""",Machine learning / AI,Time series analysis,,,,,,Using NumPy functions in compiled code,,,,,,,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,,,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,7,8,1,2,9,3,6,4,5,10,6,7,9,5,3,4,10,11,8,1,2,No,,,,,,,,YouTube,,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,Hobby,,,Financial analytics,Scientific research,,,High performance computing on clusters,,,,,,,,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,,,,,,,,,,,Using NumPy functions in compiled code,,,,,,,,,,,,,,7,8,9,1,4,6,5,3,10,2,3,6,1,5,7,4,10,11,9,2,8,No,,,,,,,,,,,,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,,,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,5,6,9,8,7,4,2,3,1,10,3,1,4,6,7,5,10,11,9,2,8,No,,,,,,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,Hobby,Educational projects,Visualization,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",Machine learning / AI,Time series analysis,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,Using NumPy functions in compiled code,,,,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,5,8,2,1,9,7,3,6,4,10,3,7,2,6,8,9,10,11,5,1,4,No,,,,,,,,,Discourse forums,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,,,,,,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",Machine learning / AI,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,"Typed containers (typed.List, typed.Dict)",,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,9,8,3,4,5,6,2,1,7,10,3,8,9,2,6,7,10,11,5,4,1,No,,,,,,,,,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,Financial analytics,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,,,,,Support for generators,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,7,6,1,2,8,5,4,3,9,10,6,11,8,7,5,10,9,4,3,1,2,No,,,,,,,X (formerly Twitter),,,,,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,7,8,3,2,9,5,1,4,6,10,3,1,8,5,10,4,9,6,2,7,11,No,,,,,,,,YouTube,,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,Hobby,Educational projects,,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,,,,,,,,,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,,CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,"The extension API (@overload, etc)",,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,7,8,10,1,9,6,2,5,3,4,1,4,9,3,5,2,11,10,8,6,7,No,,,,,,,X (formerly Twitter),YouTube,Discourse forums,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,Educational projects,,,Scientific research,,,High performance computing on clusters,,,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,,,Autovectorization,,,,,,,Using NumPy functions in compiled code,,,CUDA kernel compilation (@cuda.jit),,,,,,,,,,,,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,"Calling back into the Python interpreter using ""with objmode""",,,,,,,7,9,10,1,3,5,4,2,6,8,6,7,3,4,8,5,10,11,9,2,1,No,,,,,,,X (formerly Twitter),YouTube,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,Hobby,,Visualization,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",Machine learning / AI,,,Support for raising exceptions (raise statement),,,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,Creating stencil functions with @stencil,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,"The extension API (@overload, etc)",First class function types (types.FunctionType),Support for raising exceptions (raise statement),,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,Autovectorization,,,Support for raising exceptions (raise statement),,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,,,,,,,Autovectorization,,,7,8,1,2,9,5,4,3,6,10,7,8,10,1,3,6,5,11,4,2,9,No,,,,,,,,,,Changelog (in docs),Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,Educational projects,,,Scientific research,,,High performance computing on clusters,,,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,,,Autovectorization,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,,,,,,,,,,,,,Autovectorization,,,8,9,2,1,10,7,4,5,6,3,4,5,3,7,8,6,10,11,9,1,2,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,,,,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",Machine learning / AI,,,,,,,Using NumPy functions in compiled code,,,,,,,,Caching of compiled functions to disk,,,Autovectorization,"The extension API (@overload, etc)",,,,Support for generators,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,4,5,1,3,10,6,9,2,7,8,4,1,5,6,11,9,10,8,7,3,2,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,Visualization,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,Time series analysis,Spatial / GIS data set processing,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,,,,Caching of compiled functions to disk,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,,,,,,7,8,10,6,9,3,2,1,5,4,3,1,2,5,8,9,10,11,4,7,6,No,,,,,,Mastodon,X (formerly Twitter),,,,Email newsletter,Blog
,,,,,,,,,,,Scientific research,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,,,Autovectorization,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,Educational projects,,,Scientific research,,,High performance computing on clusters,,Machine learning / AI,,Spatial / GIS data set processing,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,"Typed containers (typed.List, typed.Dict)",,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,5,8,7,9,2,3,4,6,10,6,11,4,5,8,7,9,10,2,1,3,No,,,,,,,,,Discourse forums,Changelog (in docs),Email newsletter,
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,I have contributed a pull request to Numba.,,,,,,,,,Compiler development,,High performance computing on clusters,,Machine learning / AI,,,,Support for catching exceptions (try-except statement),,,Using NumPy functions in compiled code,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"Extension API (@overload, etc)",,4,3,6,7,2,5,8,1,9,10,1,2,11,7,4,10,8,9,3,5,6,No,,,,,,,,,Discourse forums,,Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,Hobby,,,Financial analytics,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,,,,"The extension API (@overload, etc)",,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,,,Autovectorization,,,,,,"Typed containers (typed.List, typed.Dict)",,,,CUDA kernel compilation (@cuda.jit),,,,,,,,,,,5,8,10,9,7,4,3,2,1,6,3,2,9,1,5,4,10,11,8,6,7,No,,,,,,,,YouTube,,,,
,I maintain an open source project that depends on Numba.,,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,High performance computing on clusters,,,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,,,,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,,,,,,6,4,10,9,2,3,1,5,7,8,5,7,1,2,4,6,10,11,9,8,3,Yes,,,Compiler research,,Building non-Python or domain specific compilers,,,YouTube,Discourse forums,Changelog (in docs),Email newsletter,Blog
,I maintain an open source project that depends on Numba.,,,,,,,,,,,,,,"Numerical simulations / ""Digital Twins""",,,,,,,,,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,6,3,4,9,2,5,8,7,10,4,9,1,7,8,5,10,11,6,3,2,No,,,,,,,,,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,Financial analytics,,,,,,,Time series analysis,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),Support for generators,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,First class function types (types.FunctionType),,,,"Typed containers (typed.List, typed.Dict)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2,9,6,7,8,4,3,1,5,10,5,10,11,1,3,9,6,7,4,2,8,No,,,,,,,,,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,Educational projects,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",Machine learning / AI,Time series analysis,Spatial / GIS data set processing,,,,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,,,,,,,,,,,,,,,,,,,Using NumPy functions in compiled code,,,CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,,,,7,8,5,6,9,2,1,3,4,10,2,8,5,7,4,10,6,11,3,1,9,No,,,,,,Mastodon,,,,,,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,Hobby,Educational projects,Visualization,Financial analytics,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,Time series analysis,,,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,,,Autovectorization,,,,,,"Typed containers (typed.List, typed.Dict)",,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,"Typed containers (typed.List, typed.Dict)",,,,,,,,,,,,,,,8,9,3,2,10,7,6,1,4,5,,,,,,,,,,,,No,,,,,,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,,,,,,,,Machine learning / AI,Time series analysis,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,,,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,,,,,,,,,,,,,,6,7,10,9,8,2,1,5,3,4,3,6,9,5,7,4,10,11,8,1,2,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,I have contributed a pull request to Numba.,,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,,,,Financial analytics,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,Time series analysis,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,,,,,,,,,,,,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,9,6,2,1,7,5,4,3,8,10,5,6,9,2,7,8,10,11,4,1,3,No,,,,,,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,,,Visualization,Financial analytics,Scientific research,,,,,,Time series analysis,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,,,Autovectorization,,First class function types (types.FunctionType),Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,,,,,First class function types (types.FunctionType),7,8,2,3,6,4,5,1,9,10,1,8,11,9,4,5,10,6,7,2,3,No,,,,,,,,,,Changelog (in docs),Email newsletter,
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,,,,,,,Time series analysis,,,,,,Using NumPy functions in compiled code,,,,Creating C callbacks with @cfunc,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,6,7,3,2,9,4,5,1,8,10,4,6,11,8,9,7,2,10,3,1,5,No,,,,,,,,,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,,,Autovectorization,,,,,,,,,,,,,,,,,,,,First class function types (types.FunctionType),,,,,Using NumPy functions in compiled code,,,,,,,,,,,,,,7,10,9,3,6,8,2,5,4,1,4,6,9,2,7,8,10,11,3,1,5,No,,,,,,,,,,,,Blog
,I maintain an open source project that depends on Numba.,,I have contributed a pull request to Numba.,I am a regular reader of the Numba discussion forums.,,,,,,,,Compiler development,,,,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,Using NumPy functions in compiled code,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,"The extension API (@overload, etc)",,,Support for catching exceptions (try-except statement),,,,,,,,,,,,,,,,,,,,,,,,,Creating C callbacks with @cfunc,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,2,1,9,3,8,7,4,5,6,10,4,7,6,5,9,11,8,10,3,2,1,No,,,,,,,X (formerly Twitter),,Discourse forums,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,,,,,,Using NumPy functions in compiled code,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,,Using NumPy functions in compiled code,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,8,9,3,7,10,6,2,5,1,4,1,6,9,8,7,2,10,11,4,3,5,No,,,,,,,,,Discourse forums,,Email newsletter,Blog
,,,,,,,Hobby,Educational projects,,,Scientific research,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,,,,,,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,,,,,,"Calling back into the Python interpreter using ""with objmode""",,,,,,,,,,,,,,,Creating C callbacks with @cfunc,,,,,,,,,,4,8,10,9,6,3,2,7,1,5,2,5,9,1,7,3,10,11,4,6,8,No,,,,,,Mastodon,,,,,,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,I have contributed a pull request to Numba.,I am a regular reader of the Numba discussion forums.,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,,Educational projects,,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,Time series analysis,,Support for raising exceptions (raise statement),,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,"Calling back into the Python interpreter using ""with objmode""",,,,Autovectorization,"The extension API (@overload, etc)",First class function types (types.FunctionType),,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,,,,,,,,,,,,1,5,6,7,10,8,3,4,2,9,10,1,11,9,4,8,6,7,3,2,5,Yes,,Learning about compilers,,,,,,,Discourse forums,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,,,Scientific research,,,,,,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,,,,,,,,,,,Using NumPy functions in compiled code,,,,,,,,,,,,,,8,9,1,3,10,5,4,2,6,7,7,4,9,3,5,6,10,11,2,1,8,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,Educational projects,,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",Machine learning / AI,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,Autovectorization,,,,,,,,,,,Creating C callbacks with @cfunc,,Creating stencil functions with @stencil,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,4,6,9,7,8,2,1,3,5,10,6,7,8,1,5,9,10,11,4,2,3,No,,,,,,Mastodon,X (formerly Twitter),,,Changelog (in docs),,
,I maintain an open source project that depends on Numba.,,,,,,Hobby,Educational projects,,,Scientific research,,,,,,,,Support for raising exceptions (raise statement),,Support for generators,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,"The extension API (@overload, etc)",,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,,Using NumPy functions in compiled code,,,,,,,,,,,,"Extension API (@overload, etc)",,1,2,8,5,9,7,3,6,4,10,6,10,5,3,7,11,9,8,4,1,2,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,I have contributed a pull request to Numba.,,,,,,Visualization,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),Support for generators,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,,,,,,,,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,,,,,,,,,,Autovectorization,,,3,4,7,2,8,6,1,5,9,10,2,9,10,8,3,7,11,6,5,4,1,No,,,,,,Mastodon,,YouTube,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,Hobby,,,Financial analytics,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,Caching of compiled functions to disk,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,Support for generators,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,5,6,9,8,7,3,1,2,4,10,2,4,9,6,7,8,10,11,5,1,3,No,,,,,,,,YouTube,Discourse forums,,,Blog
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,,Compiler development,,High performance computing on clusters,,Machine learning / AI,,,,Support for catching exceptions (try-except statement),,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,"Typed containers (typed.List, typed.Dict)",,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"Extension API (@overload, etc)",,6,5,7,8,4,3,2,1,9,10,1,2,11,7,4,10,8,9,3,5,6,No,,,,,,,,,,Changelog (in docs),Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,High performance computing on clusters,,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,10,8,2,6,4,3,5,1,9,4,11,6,1,5,7,10,9,8,3,2,No,,,,,,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,Hobby,,,,,Compiler development,,High performance computing on clusters,,,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,Autovectorization,"The extension API (@overload, etc)",,,,,,,,,,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,,Ahead of time compilation (with numba.pycc),,,,First class function types (types.FunctionType),Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,Compiling Python classes as structs using @jitclass,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,,,4,6,7,9,2,3,8,1,5,10,1,2,11,5,7,9,8,10,3,6,4,No,,,,,,,,,Discourse forums,Changelog (in docs),Email newsletter,Blog
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,,Compiler development,,High performance computing on clusters,,Machine learning / AI,,,,Support for catching exceptions (try-except statement),,,Using NumPy functions in compiled code,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"Extension API (@overload, etc)",,5,4,6,7,2,3,9,1,8,10,1,2,11,7,5,10,8,9,4,6,3,No,,,,,,,,,,Changelog (in docs),,
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,,Compiler development,,High performance computing on clusters,,Machine learning / AI,,,,Support for catching exceptions (try-except statement),,,Using NumPy functions in compiled code,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"Extension API (@overload, etc)",,5,4,6,7,2,3,9,1,8,10,1,2,11,7,5,10,8,9,4,6,3,No,,,,,,,,,,Changelog (in docs),,
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,I have contributed a pull request to Numba.,,,,,,,,,Compiler development,,High performance computing on clusters,,Machine learning / AI,,,,Support for catching exceptions (try-except statement),,,Using NumPy functions in compiled code,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,Autovectorization,"The extension API (@overload, etc)",,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,"Extension API (@overload, etc)",,4,3,7,8,2,5,6,1,9,10,1,3,11,7,5,10,8,9,4,6,2,No,,,,,,,,,,Changelog (in docs),,Blog
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,,Compiler development,,High performance computing on clusters,,Machine learning / AI,,,,Support for catching exceptions (try-except statement),,,Using NumPy functions in compiled code,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"Extension API (@overload, etc)",,4,3,7,6,5,2,8,1,9,10,2,1,9,4,6,10,8,11,3,5,7,Yes,,,,Building Python compilers (other than Numba),,,,,,,,
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,I have contributed a pull request to Numba.,,,,,,,,,Compiler development,,High performance computing on clusters,,Machine learning / AI,,,,Support for catching exceptions (try-except statement),,,Using NumPy functions in compiled code,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"Extension API (@overload, etc)",,4,3,6,7,2,5,8,1,9,10,1,2,11,7,4,10,8,9,3,5,6,No,,,,,,,,,,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,Financial analytics,,,,,,,Time series analysis,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8,9,2,1,10,7,3,6,4,5,4,2,9,6,7,5,10,11,3,1,8,No,,,,,,,,,,,,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,,,,,Scientific research,,,,,,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,,,,,,,,,,Caching of compiled functions to disk,,,,,,,,,"Typed containers (typed.List, typed.Dict)",,,,,,,,,,,,,,,4,7,8,2,9,3,6,1,5,10,5,3,11,4,9,6,7,8,10,2,1,No,,,,,,,,,,Changelog (in docs),,Blog
,I maintain an open source project that depends on Numba.,,,,,,,,,,Scientific research,,,,,,,,,,,,Using NumPy functions in compiled code,,,,,,,,,,,,,,,,,,,,,,,,,,Caching of compiled functions to disk,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,6,7,10,8,9,5,3,4,1,2,1,3,9,4,5,2,10,11,8,6,7,No,,,,,,,,,Discourse forums,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,Scientific research,,,High performance computing on clusters,,Machine learning / AI,Time series analysis,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,,,,,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,8,9,7,6,10,3,2,1,4,5,6,7,3,2,5,1,10,11,9,4,8,No,,,,,,,X (formerly Twitter),YouTube,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,Educational projects,,,Scientific research,,,High performance computing on clusters,,,,,,,,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,,,,"Typed containers (typed.List, typed.Dict)",,,,CUDA kernel compilation (@cuda.jit),,,,,,,,Autovectorization,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,First class function types (types.FunctionType),5,9,8,2,7,4,3,1,6,10,4,7,1,2,8,6,10,11,5,3,9,No,,,,,,,,,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",Machine learning / AI,Time series analysis,Spatial / GIS data set processing,,,Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,,First class function types (types.FunctionType),,,Support for generators,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,CUDA kernel compilation (@cuda.jit),,,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,3,4,6,8,7,5,2,1,9,10,1,2,11,5,10,3,7,6,8,4,9,Yes,,,,Building Python compilers (other than Numba),Building non-Python or domain specific compilers,,X (formerly Twitter),,,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,,,,Compiler development,,High performance computing on clusters,,Machine learning / AI,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),Creating C callbacks with @cfunc,,,,,Ahead of time compilation (with numba.pycc),,,"The extension API (@overload, etc)",,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,,,,,,,1,7,10,3,2,5,6,4,8,9,2,7,1,6,8,5,10,11,9,4,3,Yes,,,Compiler research,Building Python compilers (other than Numba),,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,Scientific research,,,High performance computing on clusters,,Machine learning / AI,Time series analysis,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,,,,,,Support for raising exceptions (raise statement),,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,Autovectorization,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,,,,,,,,,,,,8,9,3,2,10,7,1,4,5,6,4,8,10,7,9,6,5,11,3,1,2,No,,,,,,Mastodon,,,,,,
,I maintain an open source project that depends on Numba.,,,,,,,Educational projects,,Financial analytics,Scientific research,,,,,,,,,,,,Using NumPy functions in compiled code,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Autovectorization,,,5,6,1,9,8,3,2,7,4,10,2,7,5,3,8,9,11,10,6,4,1,No,,,,,,Mastodon,,,Discourse forums,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,,,Scientific research,,,,,Machine learning / AI,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Autovectorization,,,2,10,7,5,8,3,1,4,6,9,3,6,7,5,8,4,10,11,2,1,9,No,,,,,,,X (formerly Twitter),,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,I have contributed a pull request to Numba.,I am a regular reader of the Numba discussion forums.,,,Hobby,,,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",Machine learning / AI,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,Using NumPy functions in compiled code,,,CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,4,6,7,5,10,3,2,1,9,8,1,10,8,2,7,6,9,11,4,5,3,No,,,,,,,,,Discourse forums,Changelog (in docs),Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,Scientific research,,,,,Machine learning / AI,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,"Calling back into the Python interpreter using ""with objmode""",,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,Support for raising exceptions (raise statement),,,,Using NumPy functions in compiled code,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,5,8,9,3,4,7,1,2,6,10,2,5,4,3,7,1,10,11,6,8,9,No,,,,,,,,YouTube,,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,High performance computing on clusters,,,,,,,,,Using NumPy functions in compiled code,,,,,,,"Calling back into the Python interpreter using ""with objmode""",,,,,,,,,,,Using NumPy functions in compiled code,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,Using NumPy functions in compiled code,,,,,,,"Calling back into the Python interpreter using ""with objmode""",,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,8,7,3,2,9,5,4,1,6,10,5,8,3,4,9,7,10,11,2,6,1,No,,,,,,,,,,,Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,,,,,,,,,,Caching of compiled functions to disk,,,,,,,,,,,,,,,,,,Caching of compiled functions to disk,,,,,,8,9,2,1,10,7,5,4,6,3,3,5,9,2,6,4,10,11,8,7,1,No,,,,,,Mastodon,,,,,,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,,,,Time series analysis,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,"The extension API (@overload, etc)",,,,,,,,,,,,,,Caching of compiled functions to disk,,,Autovectorization,"The extension API (@overload, etc)",,,,,,,,,,,,,,,,,Autovectorization,"Extension API (@overload, etc)",,5,6,9,8,7,1,3,2,4,10,3,7,11,6,8,5,9,10,2,4,1,No,,,,,,,,,Discourse forums,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,,Educational projects,,,Scientific research,Compiler development,,High performance computing on clusters,,,,,,,Support for generators,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,CUDA kernel compilation (@cuda.jit),Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,"The extension API (@overload, etc)",,,,Support for generators,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,4,8,9,7,2,3,6,1,5,10,5,3,2,1,11,8,9,10,7,6,4,Yes,,,,,,,,,Discourse forums,Changelog (in docs),Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,Educational projects,Visualization,,Scientific research,,,,,Machine learning / AI,,,,,,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,8,9,3,4,6,7,2,1,5,10,6,5,1,3,8,7,10,11,4,2,9,No,,,,,,Mastodon,X (formerly Twitter),YouTube,,,Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,Hobby,,,,Scientific research,,Web-based microservices,,"Numerical simulations / ""Digital Twins""",Machine learning / AI,Time series analysis,,,Support for catching exceptions (try-except statement),,,Using NumPy functions in compiled code,,,CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,,,,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,"Typed containers (typed.List, typed.Dict)",,,,,,,,,Caching of compiled functions to disk,,,,,First class function types (types.FunctionType),4,5,2,3,6,7,8,1,9,10,3,4,11,5,10,6,8,9,1,2,7,No,,,,,,,,,Discourse forums,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,,,Scientific research,,,High performance computing on clusters,,Machine learning / AI,Time series analysis,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,,,,Autovectorization,,,,,,,,Compiling Python classes as structs using @jitclass,,CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,CUDA kernel compilation (@cuda.jit),,,,,,Ahead of time compilation (with numba.pycc),,,"Extension API (@overload, etc)",,4,7,6,3,10,5,1,2,8,9,5,2,1,7,8,6,10,11,9,4,3,No,,,,,,,X (formerly Twitter),YouTube,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,I have contributed a pull request to Numba.,,,,,,,,Scientific research,,,,,Machine learning / AI,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,Autovectorization,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,4,8,1,2,9,6,5,3,7,10,4,7,9,3,8,6,10,11,5,2,1,No,,,,,,,,,,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,I am a regular reader of the Numba discussion forums.,,,Hobby,Educational projects,Visualization,,Scientific research,,,,,Machine learning / AI,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,,,7,4,9,3,8,2,5,1,6,10,5,7,9,4,8,6,10,11,2,3,1,No,,,,,,Mastodon,X (formerly Twitter),,,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,I am a regular reader of the Numba discussion forums.,,,,,,Financial analytics,,,Web-based microservices,,"Numerical simulations / ""Digital Twins""",,Time series analysis,,Support for raising exceptions (raise statement),,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,4,3,10,2,9,5,8,1,6,7,2,5,9,4,6,3,10,11,8,1,7,No,,,,,,,,,Discourse forums,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,Scientific research,Compiler development,,,"Numerical simulations / ""Digital Twins""",,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,Creating C callbacks with @cfunc,,,"Calling back into the Python interpreter using ""with objmode""",,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,First class function types (types.FunctionType),,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,Creating C callbacks with @cfunc,,,"Calling back into the Python interpreter using ""with objmode""",,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,9,8,5,4,3,7,2,1,6,10,4,2,7,1,6,10,9,11,8,5,3,Yes,,Learning about compilers,Compiler research,,Building non-Python or domain specific compilers,,X (formerly Twitter),,,Changelog (in docs),,Blog
,,,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,High performance computing on clusters,,Machine learning / AI,,,,,,,Using NumPy functions in compiled code,,,CUDA kernel compilation (@cuda.jit),Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,"Calling back into the Python interpreter using ""with objmode""",,,,Autovectorization,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,6,7,10,9,8,3,2,1,4,5,4,2,9,1,6,5,10,11,8,7,3,No,,,,,,,X (formerly Twitter),,,,,
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,,,,,,Compiler development,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",Machine learning / AI,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,,,,,"The extension API (@overload, etc)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"Extension API (@overload, etc)",,3,9,4,5,6,1,2,7,8,10,6,5,8,1,7,11,9,10,2,3,4,No,,,,,,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,Hobby,,Visualization,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",Machine learning / AI,Time series analysis,Spatial / GIS data set processing,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,1,9,4,7,8,6,3,2,5,10,1,6,2,4,7,5,10,11,9,8,3,No,,,,,,Mastodon,X (formerly Twitter),,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",Machine learning / AI,,,,,,,,,,,Creating C callbacks with @cfunc,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,4,5,10,9,8,3,2,1,6,7,1,3,7,2,10,11,6,9,4,5,8,No,,,,,,,,,Discourse forums,Changelog (in docs),,Blog
,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,Educational projects,Visualization,,Scientific research,,,High performance computing on clusters,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),,,"The extension API (@overload, etc)",,,,Support for generators,,,,,CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,Support for generators,"Typed containers (typed.List, typed.Dict)",,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,7,9,2,3,10,4,1,5,6,8,4,6,8,2,3,1,10,11,9,5,7,Yes,,Learning about compilers,,,Building non-Python or domain specific compilers,,,YouTube,,Changelog (in docs),Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,Hobby,,,Financial analytics,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,Time series analysis,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,First class function types (types.FunctionType),7,8,1,3,9,5,4,2,6,10,4,5,3,1,9,11,8,10,2,6,7,No,,,,,,,,,,,,Blog
,I maintain an open source project that depends on Numba.,,,,,,,,,,Scientific research,Compiler development,,,,Machine learning / AI,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,,,,,,,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,3,2,9,6,8,7,5,1,4,10,1,4,11,3,5,2,9,10,8,7,6,No,,,,,,,X (formerly Twitter),YouTube,,,,
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,Scientific research,,,,,Machine learning / AI,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,8,5,10,9,4,1,2,3,6,2,5,9,4,6,3,10,11,8,1,7,No,,,,,,,X (formerly Twitter),,,,Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,Creating stencil functions with @stencil,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,Creating stencil functions with @stencil,,,,,Autovectorization,,,,,,,,,,,,,Creating stencil functions with @stencil,,,,,Autovectorization,,,8,9,3,2,5,7,6,4,1,10,1,4,6,5,7,8,10,11,2,9,3,No,,,,,,,,,Discourse forums,,,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,Scientific research,,,,,,,,Support for raising exceptions (raise statement),,Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,,,Autovectorization,,,,,,,,,,,,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,5,9,3,4,6,2,1,8,7,10,2,6,8,3,7,5,10,11,1,4,9,No,,,,,,Mastodon,X (formerly Twitter),,Discourse forums,,,Blog
,I maintain an open source project that depends on Numba.,,I have contributed a pull request to Numba.,I am a regular reader of the Numba discussion forums.,,,Hobby,,,,Scientific research,Compiler development,,,,,,,,,,,,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,Autovectorization,,,,,,,,,,,,,,,,,,,,,6,2,1,8,9,7,3,5,4,10,4,7,2,3,5,6,10,11,8,1,9,Yes,,,,Building Python compilers (other than Numba),Building non-Python or domain specific compilers,,,,Discourse forums,,,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,I have contributed a pull request to Numba.,I am a regular reader of the Numba discussion forums.,,,,,,,,Compiler development,,,,Machine learning / AI,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,"The extension API (@overload, etc)",,,,Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,4,5,10,6,7,3,2,1,8,9,3,7,10,2,11,9,1,8,4,5,6,No,,,,,,Mastodon,,,,,Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,Hobby,Educational projects,,,,,,,,Machine learning / AI,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),,Autovectorization,,,7,9,2,3,1,6,5,4,10,8,1,11,5,6,7,2,9,10,4,8,3,No,,,,,,,X (formerly Twitter),YouTube,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,Hobby,Educational projects,,,Scientific research,,,,,,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,Support for catching exceptions (try-except statement),Support for generators,,,,,,,,,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),,,,,4,6,7,5,10,1,2,9,3,8,7,2,6,8,3,11,10,9,5,1,4,No,,,,,,,X (formerly Twitter),,,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,,,,,,Machine learning / AI,,Spatial / GIS data set processing,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,7,8,4,6,9,5,2,1,3,10,1,5,8,2,6,11,9,10,3,7,4,No,,,,,,,,,Discourse forums,,,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,Hobby,Educational projects,,,,,,,"Numerical simulations / ""Digital Twins""",Machine learning / AI,Time series analysis,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,First class function types (types.FunctionType),,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,Creating C callbacks with @cfunc,,,,,Ahead of time compilation (with numba.pycc),,,,First class function types (types.FunctionType),4,6,8,9,5,3,2,1,7,10,1,8,11,3,5,10,7,9,2,4,6,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,Time series analysis,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,,,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,1,7,9,5,10,6,2,4,3,8,1,2,9,4,7,8,10,11,6,5,3,No,,,,,,,,YouTube,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,,,,High performance computing on clusters,,Machine learning / AI,,Spatial / GIS data set processing,,,,,,,,CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,Caching of compiled functions to disk,,,Autovectorization,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,Creating stencil functions with @stencil,,,,,,,,4,9,3,2,8,6,5,1,7,10,2,5,9,4,6,3,10,11,8,7,1,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,Scientific research,,,,,,,,,,,,Using NumPy functions in compiled code,,,,,,,,Caching of compiled functions to disk,,,,,,,,,,Using NumPy functions in compiled code,,,,,,,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),,,,,7,8,1,2,9,6,3,5,4,10,3,7,9,4,8,6,10,11,2,1,5,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,I have contributed a pull request to Numba.,I am a regular reader of the Numba discussion forums.,,"I package Numba for distribution (conda, Linux distributions, homebrew, etc)",Hobby,Educational projects,Visualization,Financial analytics,Scientific research,Compiler development,,High performance computing on clusters,,,Time series analysis,Spatial / GIS data set processing,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,Autovectorization,"The extension API (@overload, etc)",,Support for raising exceptions (raise statement),,Support for generators,,,Compiling Python classes as structs using @jitclass,,CUDA kernel compilation (@cuda.jit),,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,Ahead of time compilation (with numba.pycc),,Autovectorization,"Extension API (@overload, etc)",,3,2,9,4,7,6,5,1,10,8,1,11,8,3,9,10,4,6,2,5,7,Yes,,Learning about compilers,Compiler research,Building Python compilers (other than Numba),,,X (formerly Twitter),YouTube,,,,Blog
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,I have contributed a pull request to Numba.,I am a regular reader of the Numba discussion forums.,,,Hobby,,,Financial analytics,,,,High performance computing on clusters,,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,Creating C callbacks with @cfunc,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,"The extension API (@overload, etc)",First class function types (types.FunctionType),,,,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,,,Creating C callbacks with @cfunc,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,"The extension API (@overload, etc)",First class function types (types.FunctionType),,Support for catching exceptions (try-except statement),,"Typed containers (typed.List, typed.Dict)",,,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,"Extension API (@overload, etc)",,8,4,10,9,2,3,7,1,5,6,3,2,9,4,6,5,10,11,8,7,1,No,,,,,,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,I have contributed a pull request to Numba.,I am a regular reader of the Numba discussion forums.,"I answer other people's questions about Numba on forums, StackOverflow, etc.","I package Numba for distribution (conda, Linux distributions, homebrew, etc)",,,,,,Compiler development,,High performance computing on clusters,,Machine learning / AI,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,Creating stencil functions with @stencil,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,Autovectorization,,,,,,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,Support for catching exceptions (try-except statement),,,,,,,,,,,Caching of compiled functions to disk,,,,,,2,1,9,8,4,6,7,3,5,10,5,4,3,1,2,7,10,11,6,9,8,No,,,,,,,,,Discourse forums,Changelog (in docs),Email newsletter,
,I maintain an open source project that depends on Numba.,,,I am a regular reader of the Numba discussion forums.,,,,,,,,Compiler development,,,,,,,,,,,Using NumPy functions in compiled code,,,,,,,,,,,,"The extension API (@overload, etc)",,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,"Extension API (@overload, etc)",,7,8,10,9,2,3,1,4,5,6,2,6,3,5,7,4,10,11,1,8,9,No,,,,,,,,,Discourse forums,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,I am a regular reader of the Numba discussion forums.,,,Hobby,,,Financial analytics,Scientific research,,,High performance computing on clusters,,,Time series analysis,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,,,,,,,,,,,,,,,,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",,,,,,,,,,,,,,,10,9,7,4,8,5,1,6,2,3,8,9,2,5,6,10,4,11,7,3,1,No,,,,,,,,,Discourse forums,,,Blog
,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,,,Web-based microservices,,,,Time series analysis,Spatial / GIS data set processing,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,,,,,"Calling back into the Python interpreter using ""with objmode""",,,,,,,,,,,,,,,,,,,Caching of compiled functions to disk,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,2,7,6,8,9,5,4,1,3,10,7,8,11,1,6,4,3,5,2,9,10,No,,,,,,,,,,Changelog (in docs),Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,,,,Financial analytics,,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,,,Support for raising exceptions (raise statement),,Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,"The extension API (@overload, etc)",First class function types (types.FunctionType),,,Support for generators,,,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,First class function types (types.FunctionType),,,,,,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,First class function types (types.FunctionType),1,2,10,9,8,6,5,3,4,7,3,5,9,2,7,6,10,11,4,8,1,No,,,,,,,,,Discourse forums,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,,,,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",,,,,,,,,,,,,,,4,6,9,8,7,1,2,3,5,10,5,3,10,2,9,7,6,8,11,4,1,No,,,,,,,,,Discourse forums,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,,Compiler development,,,,,,Spatial / GIS data set processing,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,,,,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,,,Caching of compiled functions to disk,,,,,,7,8,3,2,9,4,5,1,6,10,1,3,4,7,8,6,10,11,2,5,9,No,,,,,,,,,,,,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,Educational projects,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,Spatial / GIS data set processing,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,7,9,6,5,8,2,1,3,4,10,6,8,4,7,3,5,10,11,9,2,1,No,,,,,,Mastodon,,YouTube,Discourse forums,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,Hobby,Educational projects,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,,,,,,Caching of compiled functions to disk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4,8,1,2,10,5,3,7,9,6,6,9,1,7,8,10,5,11,4,3,2,No,,,,,,Mastodon,,,,Changelog (in docs),,
,I maintain an open source project that depends on Numba.,,,,,,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,,,Autovectorization,,,,,,,Using NumPy functions in compiled code,,,,,,,,,,,,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,,,,,,5,8,10,3,7,4,1,2,6,9,3,5,2,7,8,6,10,11,4,1,9,No,,,,,,,X (formerly Twitter),,Discourse forums,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,,,Scientific research,,,High performance computing on clusters,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",,,,,"Typed containers (typed.List, typed.Dict)",,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,First class function types (types.FunctionType),,,,,,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"Extension API (@overload, etc)",,1,5,9,8,7,3,2,6,4,10,4,2,11,10,5,6,8,9,7,3,1,No,,,,,,,,,,,Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,I have contributed a pull request to Numba.,,,,,,,,Scientific research,,,High performance computing on clusters,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,,CUDA kernel compilation (@cuda.jit),,,,"Calling back into the Python interpreter using ""with objmode""",,,,,"The extension API (@overload, etc)",,,,,,,,,,,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,,,,,,7,8,3,10,9,6,4,1,2,5,5,1,10,2,7,6,4,11,9,8,3,No,,,,,,,,,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,Visualization,,Scientific research,,,High performance computing on clusters,,,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,,,,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,Creating C callbacks with @cfunc,,,,,Ahead of time compilation (with numba.pycc),,,,,4,5,7,6,9,8,2,3,1,10,1,9,7,2,11,4,8,10,6,5,3,No,,,,,,Mastodon,,,,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,I have contributed a pull request to Numba.,I am a regular reader of the Numba discussion forums.,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,,,,,Scientific research,,,,,Machine learning / AI,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,,,,,"Calling back into the Python interpreter using ""with objmode""",Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",First class function types (types.FunctionType),,,,,,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),,,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,,,Creating C callbacks with @cfunc,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,6,8,2,5,9,4,7,1,3,10,1,3,11,2,7,4,5,8,10,9,6,No,,,,,,,,,Discourse forums,,,
,I maintain an open source project that depends on Numba.,,,,,,Hobby,,Visualization,Financial analytics,Scientific research,,,,,Machine learning / AI,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,Autovectorization,,,,,,,,,,,Creating C callbacks with @cfunc,,,,,,,,,,,,,,,,,,Creating C callbacks with @cfunc,,,,,,,,,,4,8,1,2,7,5,6,3,9,10,4,5,11,1,6,9,7,8,10,2,3,No,,,,,,Mastodon,,YouTube,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,Hobby,Educational projects,,,Scientific research,,,High performance computing on clusters,,Machine learning / AI,Time series analysis,Spatial / GIS data set processing,,,,,Using NumPy functions in compiled code,,,,,,,,Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,Autovectorization,"The extension API (@overload, etc)",,,,,,Using NumPy functions in compiled code,,,,,,,,,,,,"Extension API (@overload, etc)",,5,6,9,8,7,4,2,3,1,10,3,6,9,5,7,4,10,11,8,1,2,No,,,,,,,,YouTube,Discourse forums,Changelog (in docs),,
,,,,,,,Hobby,,,Financial analytics,,,,,,,Time series analysis,,,,,"Typed containers (typed.List, typed.Dict)",,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,7,8,6,5,4,3,2,1,9,10,5,6,4,1,8,7,10,11,2,9,3,No,,,,,,,,,,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,Visualization,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,,,,Support for generators,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,,,,,,,,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,,,,,,,,,,,,,5,9,4,3,10,6,2,1,7,8,4,5,7,3,8,9,10,11,2,6,1,No,,,,,,Mastodon,,,,,,Blog
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,High performance computing on clusters,,,,,,,,,Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,,,,Caching of compiled functions to disk,,,,,,,,,,,,,,,,,"Calling back into the Python interpreter using ""with objmode""",,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,4,5,1,2,7,6,8,3,9,10,1,3,9,2,6,5,10,11,8,4,7,No,,,,,,Mastodon,,,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,,Visualization,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,Time series analysis,,Support for raising exceptions (raise statement),,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,Caching of compiled functions to disk,,,Autovectorization,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5,6,2,1,10,8,7,3,9,4,4,9,6,1,10,8,7,11,5,3,2,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,I have contributed a pull request to Numba.,,,,,,Visualization,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,,,Support for raising exceptions (raise statement),,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),Creating C callbacks with @cfunc,,,,Caching of compiled functions to disk,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",Autovectorization,,,,,,,,,,,,,,,Caching of compiled functions to disk,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,3,4,5,6,10,2,9,1,8,7,3,10,8,2,5,6,9,4,11,7,1,No,,,,,,Mastodon,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,Time series analysis,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,,Ahead of time compilation (with numba.pycc),,Autovectorization,,,,,,,,,,,,,,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,Autovectorization,,,,,,,,,,,,,1,7,2,5,8,6,10,11,9,3,4,No,,,,,,Mastodon,,,,,,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,,,Scientific research,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,,,,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,,,,,,,,,,,,,,CUDA kernel compilation (@cuda.jit),,,,,,,,,,,6,8,9,7,10,4,2,3,5,1,4,5,8,2,7,6,10,11,9,1,3,No,,,,,,Mastodon,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,Hobby,,,,Scientific research,,,High performance computing on clusters,,,Time series analysis,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,,,Autovectorization,,First class function types (types.FunctionType),,,,,,,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,First class function types (types.FunctionType),,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,Creating stencil functions with @stencil,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,Autovectorization,,First class function types (types.FunctionType),4,8,5,7,9,6,2,1,3,10,4,5,9,1,7,6,10,11,8,2,3,No,,,,,,,X (formerly Twitter),,Discourse forums,,Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,Hobby,,Visualization,,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"Typed containers (typed.List, typed.Dict)",,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,,,,,,1,3,9,5,8,4,7,2,6,10,1,6,2,3,5,4,11,10,9,7,8,No,,,,,,,,YouTube,,,,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,Time series analysis,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,Compiling Python classes as structs using @jitclass,,,Creating C callbacks with @cfunc,,,,Caching of compiled functions to disk,,,,"Extension API (@overload, etc)",,5,6,10,4,7,3,2,1,8,9,2,3,9,1,7,4,10,11,8,5,6,No,,,,,,,X (formerly Twitter),YouTube,,,,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,I am a regular reader of the Numba discussion forums.,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,Hobby,,,,Scientific research,,,,,,,Spatial / GIS data set processing,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,,,,Autovectorization,,,,,,,,,,,,,,,,,,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,,,,,,,5,7,9,8,6,4,1,2,3,10,7,4,5,1,8,10,6,9,11,3,2,No,,,,,,,X (formerly Twitter),,Discourse forums,,,
I regularly use Numba to speed up Python code I have personally written.,,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,I am a regular reader of the Numba discussion forums.,,,,,,,Scientific research,,,,"Numerical simulations / ""Digital Twins""",,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,,,,,,,,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,4,3,2,5,6,7,9,1,8,10,1,5,9,2,8,4,10,11,7,3,6,No,,,,,,,,,Discourse forums,Changelog (in docs),Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,I am a regular reader of the Numba discussion forums.,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,Hobby,,,Financial analytics,,,,,,Machine learning / AI,Time series analysis,,,,,,Using NumPy functions in compiled code,,,,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,,,,"The extension API (@overload, etc)",First class function types (types.FunctionType),,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,,,,4,5,3,2,9,8,7,1,6,10,1,5,11,6,7,10,8,9,2,3,4,No,,,,,,,,YouTube,Discourse forums,,,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,Educational projects,Visualization,,,,,High performance computing on clusters,,Machine learning / AI,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),Support for generators,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,"Calling back into the Python interpreter using ""with objmode""",,Ahead of time compilation (with numba.pycc),,Autovectorization,,First class function types (types.FunctionType),,,,,,Compiling Python classes as structs using @jitclass,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,,,,,,,Caching of compiled functions to disk,Ahead of time compilation (with numba.pycc),,,,,8,9,6,2,10,7,5,1,3,4,3,8,11,4,9,6,5,10,2,7,1,No,,,,,,Mastodon,X (formerly Twitter),,,Changelog (in docs),Email newsletter,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,,,,,,Educational projects,,,Scientific research,,,,,Machine learning / AI,,,Support for raising exceptions (raise statement),Support for catching exceptions (try-except statement),Support for generators,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,Caching of compiled functions to disk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,Creating stencil functions with @stencil,,,,,,,,4,5,7,2,6,8,10,3,9,1,2,5,9,4,6,3,10,11,8,1,7,No,,,,,,,,,,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,,Educational projects,Visualization,,Scientific research,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,,Spatial / GIS data set processing,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,Compiling Python classes as structs using @jitclass,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,,,Autovectorization,,,,,,,,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,,,,,,,,,,,,,,,"Debugging tools (gdb support, LLVM IR and assembly dumps, etc)",,,,8,9,4,3,5,7,2,1,6,10,7,9,6,4,3,8,10,11,1,5,2,No,,,,,,Mastodon,X (formerly Twitter),,,,,
,I maintain an open source project that depends on Numba.,I maintain a proprietary or non-public project that depends on Numba (might be internal to your organization).,,,,,,,,,,,,High performance computing on clusters,"Numerical simulations / ""Digital Twins""",,,Spatial / GIS data set processing,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,7,8,1,2,9,6,3,5,4,10,3,6,2,5,7,11,9,10,1,4,8,No,,,,,,,,,,Changelog (in docs),,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,,,,,,Visualization,,,,,,,,,,,,,,Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,,,,,Ahead of time compilation (with numba.pycc),,,,,6,7,9,2,8,5,4,1,3,10,1,4,9,3,5,2,10,11,7,6,8,No,,,,,,,X (formerly Twitter),,Discourse forums,,Email newsletter,Blog
I regularly use Numba to speed up Python code I have personally written.,,,,I am a regular reader of the Numba discussion forums.,"I answer other people's questions about Numba on forums, StackOverflow, etc.",,Hobby,,,Financial analytics,,,,,,,Time series analysis,,,,,,Using NumPy functions in compiled code,,,,Creating C callbacks with @cfunc,Creating NumPy ufuncs with @vectorize or @guvectorize,,,Caching of compiled functions to disk,,,,,First class function types (types.FunctionType),,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,,,,,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,Ahead of time compilation (with numba.pycc),,,,,7,8,3,2,4,5,6,1,9,10,2,5,10,4,7,11,8,9,1,6,3,No,,,,,,,,YouTube,Discourse forums,Changelog (in docs),,
I regularly use Numba to speed up Python code I have personally written.,I maintain an open source project that depends on Numba.,,I have contributed a pull request to Numba.,,,,,,,,Scientific research,,,High performance computing on clusters,,Machine learning / AI,,,,,,"Typed containers (typed.List, typed.Dict)",Using NumPy functions in compiled code,,Automatic multithreading with @jit(parallel=True) and/or prange(),,,,,,Caching of compiled functions to disk,,,Autovectorization,"The extension API (@overload, etc)",First class function types (types.FunctionType),,,,,,,,,,Creating NumPy ufuncs with @vectorize or @guvectorize,,,,,,,,,,,,,,,Automatic multithreading with @jit(parallel=True) and/or prange(),CUDA kernel compilation (@cuda.jit),,,,,,Ahead of time compilation (with numba.pycc),,,,,4,6,3,2,9,7,5,1,8,10,1,3,8,4,10,11,7,9,6,5,2,No,,,,,,,X (formerly Twitter),,Discourse forums,Changelog (in docs),,
